package com.example.sqlitedemo;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import java.util.List;

public class MainActivity extends AppCompatActivity {

    private String TAG = "MainAct";
    private DatabaseHandler db;
    private List<Contact> contacts;
    private ContactsAdapter adapter;
    private Button addContactButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //create database instance
        db = new DatabaseHandler(this);

        // Lookup the recyclerview in activity layout
        RecyclerView rvContacts = (RecyclerView) findViewById(R.id.rvContacts);
        rvSetup(db, rvContacts);

        addContactButton = (Button) findViewById(R.id.addContactBtn);

        addContactButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                addContact(v);
            }
        });
    }

    private void LogContacts(DatabaseHandler db) {
        // Reading all contacts
        Log.d(TAG, "Reading all contacts..");
        List<Contact> contacts = db.getAllContacts();

        for (Contact cn : contacts) {
            String log = "Id: " + cn.getID() + " ,Name: " + cn.getName() + " ,Phone: " +
                    cn.getPhoneNumber();
            // Writing Contacts to log
            Log.d(TAG, log);
        }
    }

    //This method is only required if you have an add user button it opens a dialog that can be used to add a contact
    public void addContact(View v) {
        //Much of this code can be inlined, I just kept it step by step to be clear
        // Create an alert builder
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        //builder.setTitle("Add Contact"); optional

        // set the custom layout
        final View customLayout
                = getLayoutInflater()
                .inflate(
                        R.layout.adduserdialog,
                        null);
        builder.setView(customLayout);

        // add a button
        builder.setPositiveButton(
                "ADD",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(
                            DialogInterface dialog, int which) {
                        // send data from the AlertDialog to the Activity
                        EditText nameEditText = customLayout.findViewById(R.id.nameIn);
                        EditText phoneEditText = customLayout.findViewById(R.id.contactPhIn);
                        //get input from text fields, I would recommend adding validation
                        String phoneInput = phoneEditText.getText().toString();
                        String nameInput = nameEditText.getText().toString();
                        //add contacts to Sqlite database
                        int newID = db.addContact(new Contact(nameInput, phoneInput));
                        //add contacts to contacts list that the recyclerview uses as a source
                        //we have to get the contacts from the database to get the autogenerated id
                        contacts.add(db.getContact(newID));
                        //let the adapter know the Data has changed
                        adapter.notifyDataSetChanged();
                        //view database in logcat to check everything worked
                        LogContacts(db);
                    }
                });
        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                dialog.dismiss();
            }
        });
        AlertDialog dialog = builder.create();
        dialog.show();
    }

    //This method is only required if you are using the buttons (edit delete) in the recyclerview
    public void editContact(final int position) {
        //get the contact object to edit so we can extract ID
        final Contact editContact = contacts.get(position);
        int id = editContact.getID();
        Log.d(TAG, "editing contact id: " + id);
        // Create an alert builder
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        //builder.setTitle("Add Contact"); optional
        // set the custom layout xml for dialog
        final View customLayout
                = getLayoutInflater()
                .inflate(
                        R.layout.editcontactdialog,
                        null);
        builder.setView(customLayout);
        //set existing contact details
        EditText nameEditText = (EditText) customLayout.findViewById(R.id.nameIn);
        nameEditText.setHint("Name: " + editContact.getName());
        EditText phoneEditText = (EditText) customLayout.findViewById(R.id.contactPhIn);
        phoneEditText.setHint("Phone No: " + editContact.getPhoneNumber());

        // add buttons to the dialog
        builder.setPositiveButton(
                "APPLY",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(
                            DialogInterface dialog, int which) {
                        // send data from the AlertDialog to the Activity
                        EditText nameEditText = customLayout.findViewById(R.id.nameIn);
                        EditText phoneEditText = customLayout.findViewById(R.id.contactPhIn);
                        //get input from text fields, I would recommend adding validation
                        String phoneInput = phoneEditText.getText().toString();
                        String nameInput = nameEditText.getText().toString();

                        //check if no change made
                        if (phoneInput.equals("")) {
                            phoneInput = editContact.getPhoneNumber();
                        }
                        if (nameInput.equals("")) {
                            nameInput = editContact.getName();
                        }
                        //edit recycler list & update
                        contacts.set(position, new Contact(editContact.getID(), nameInput, phoneInput));
                        adapter.notifyItemChanged(position);
                        //edit contact in sqlite database
                        Contact updateContact = db.getContact(editContact.getID());
                        updateContact.setPhoneNumber(phoneInput);
                        updateContact.setName(nameInput);
                        db.updateContact(updateContact);
                        Log.d(TAG, "Updating ..");
                        LogContacts(db);
                    }
                });
        builder.setNegativeButton("CANCEL", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                dialog.dismiss();
            }
        });
        AlertDialog dialog = builder.create();
        dialog.show();


    }

    //This method is only required if you are using the buttons (edit delete) in the recyclerview
    public void deleteContact(int position) {
        //get the contact object to delete so we can extract ID
        Contact deleteContact = contacts.get(position);
        Log.d(TAG, "deleting contact id: " + deleteContact.getID());
        db.deleteContactByID(Integer.toString(deleteContact.getID()));
        //remove the contact from the list of contacts used by te array list
        contacts.remove(position);
        //remove the contact from the adapter
        adapter.notifyItemRemoved(position);
    }

    //Recycler view creation & setup
    private void rvSetup(DatabaseHandler db, RecyclerView rvContacts) {
        //get List of contacts in database
        contacts = db.getAllContacts();
        // Create adapter passing in the sample user data
        adapter = new ContactsAdapter(contacts);
        // Attach the adapter to the recyclerview to populate items
        rvContacts.setAdapter(adapter);
        // Set layout manager to position the items
        rvContacts.setLayoutManager(new LinearLayoutManager(this));

        //implement the buttons in recyclerview(only required if you have buttons)
        adapter.setOnItemClickListener(new ContactsAdapter.OnItemClickListener() {
            @Override
            public void onDeleteClick(int position) {
                Log.d(TAG, "Position to delete:" + position);
                deleteContact(position);
            }

            @Override
            public void onEditClick(int position) {
                Log.d(TAG, "Position to edit:" + position);
                editContact(position);
            }
        });
    }
}